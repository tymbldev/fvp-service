{
  "info": {
    "_postman_id": "cd5a5bcc-916e-479f-854e-96102c6b21b6",
    "name": "FVP Service",
    "description": "Collection for FVP Service API endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "8726097"
  },
  "item": [
    {
      "name": "Health",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/health",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "health"
              ]
            },
            "description": "Check the health status of the service"
          },
          "response": []
        },
        {
          "name": "Ping",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/health/ping",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "health",
                "ping"
              ]
            },
            "description": "Simple ping endpoint"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Categories",
      "item": [
        {
          "name": "Get Home Categories",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "1",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/categories/home",
              "host": ["{{base_url}}"],
              "path": ["api", "categories", "home"]
            },
            "description": "Get categories for home page with their links"
          },
          "response": []
        },
        {
          "name": "Get Home SEO Categories",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "1",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/categories/home-seo",
              "host": ["{{base_url}}"],
              "path": ["api", "categories", "home-seo"]
            },
            "description": "Get categories with homeSEO=true and their links"
          },
          "response": []
        },
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/categories/all",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "categories",
                "all"
              ]
            },
            "description": "Get all categories with their link counts"
          },
          "response": []
        },
        {
          "name": "Get Category First Link",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "1",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/categories/:categoryName/first",
              "host": ["{{base_url}}"],
              "path": ["api", "categories", ":categoryName", "first"],
              "variable": [
                {
                  "key": "categoryName",
                  "value": "your-category-name"
                }
              ]
            },
            "description": "Get the first link for a specific category"
          },
          "response": []
        },
        {
          "name": "Get Category Links",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "1",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/categories/:categoryName/links?maxDuration=:maxDuration&quality=:quality&page=:page&size=:size",
              "host": ["{{base_url}}"],
              "path": ["api", "categories", ":categoryName", "links"],
              "query": [
                {
                  "key": "maxDuration",
                  "value": ":maxDuration"
                },
                {
                  "key": "quality",
                  "value": ":quality"
                },
                {
                  "key": "page",
                  "value": ":page"
                },
                {
                  "key": "size",
                  "value": ":size"
                }
              ],
              "variable": [
                {
                  "key": "categoryName",
                  "value": "your-category-name"
                },
                {
                  "key": "maxDuration",
                  "value": "null"
                },
                {
                  "key": "quality",
                  "value": "null"
                },
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "20"
                }
              ]
            },
            "description": "Get links for a specific category with pagination and filtering"
          },
          "response": []
        },
        {
          "name": "Build System Cache",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "1",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/categories/build-cache",
              "host": ["{{base_url}}"],
              "path": ["api", "categories", "build-cache"]
            },
            "description": "Build the complete system cache by calling home, home-seo, and first page of all categories"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Models",
      "item": [
        {
          "name": "Get All Models",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/models/all",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "models",
                "all"
              ]
            },
            "description": "Get all models with their basic information (id, tenantId, name, description, country, thumbnail, thumbPath, age). This endpoint no longer returns link-related fields."
          },
          "response": []
        },
        {
          "name": "Get Model Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/models/:modelName/first",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "models",
                ":modelName",
                "first"
              ],
              "variable": [
                {
                  "key": "modelName",
                  "value": "exampleModel",
                  "description": "Name of the model"
                }
              ]
            },
            "description": "Get the details for a specific model along with its first link data. This endpoint returns both model information (id, tenantId, name, description, country, thumbnail, thumbPath, age) and link data (link, linkTitle, linkThumbnail, linkThumbPath, linkSource, linkTrailer, linkDuration)."
          },
          "response": []
        },
        {
          "name": "Get Model Links",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/models/:modelName/links?page=0&size=20&minDuration=&maxDuration=&quality=",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "models",
                ":modelName",
                "links"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0",
                  "description": "Page number (zero-based)"
                },
                {
                  "key": "size",
                  "value": "20",
                  "description": "Number of items per page"
                },
                {
                  "key": "minDuration",
                  "value": "",
                  "description": "Optional filter for minimum duration"
                },
                {
                  "key": "maxDuration",
                  "value": "",
                  "description": "Optional filter for maximum duration"
                },
                {
                  "key": "quality",
                  "value": "",
                  "description": "Optional filter for quality"
                }
              ],
              "variable": [
                {
                  "key": "modelName",
                  "value": "exampleModel",
                  "description": "Name of the model"
                }
              ]
            },
            "description": "Get links for a specific model with pagination and filtering. This endpoint returns model information along with a separate collection of links."
          },
          "response": []
        },
        {
          "name": "Build Model Cache",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/models/build-cache",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "models",
                "build-cache"
              ]
            },
            "description": "Build the complete model cache by calling all models and caching their data"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Links",
      "item": [
        {
          "name": "Get Total Link Count",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/links/count",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "links",
                "count"
              ]
            },
            "description": "Get total count of links for a tenant"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Elasticsearch",
      "item": [
        {
          "name": "Search Links",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/elasticsearch/links/search?query=example&page=0&size=20",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "elasticsearch",
                "links",
                "search"
              ],
              "query": [
                {
                  "key": "query",
                  "value": "example",
                  "description": "Search query for links (searches across multiple fields including title, categories, models, etc.)"
                },
                {
                  "key": "page",
                  "value": "0",
                  "description": "Page number (zero-based)"
                },
                {
                  "key": "size",
                  "value": "20",
                  "description": "Number of items per page"
                }
              ]
            },
            "description": "Search for links using a query string. Returns paginated results with metadata including totalElements, totalPages, currentPage, size, and content."
          },
          "response": []
        },
        {
          "name": "Search Categories",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/elasticsearch/categories/search?query=example",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "elasticsearch",
                "categories",
                "search"
              ],
              "query": [
                {
                  "key": "query",
                  "value": "example",
                  "description": "Query to search categories by name or description"
                }
              ]
            },
            "description": "Search for categories by name or description. Returns a list of category documents with their metadata."
          },
          "response": []
        },
        {
          "name": "Search Models",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/elasticsearch/models/search?query=example",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "elasticsearch",
                "models",
                "search"
              ],
              "query": [
                {
                  "key": "query",
                  "value": "example",
                  "description": "Query to search models by name or description"
                }
              ]
            },
            "description": "Search for models by name or description. Returns a list of model documents with their metadata."
          },
          "response": []
        },
        {
          "name": "Autosuggest",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/elasticsearch/autosuggest?query=example",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "elasticsearch",
                "autosuggest"
              ],
              "query": [
                {
                  "key": "query",
                  "value": "example",
                  "description": "Query for autosuggest results (required)"
                }
              ]
            },
            "description": "Get autosuggest results for links, categories, and models based on a prefix query. Returns a combined list of matching items with their type and details."
          },
          "response": []
        },
        {
          "name": "Sync All",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/elasticsearch/sync",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "elasticsearch",
                "sync"
              ]
            },
            "description": "Trigger a synchronization of all entities (links, categories, models) to Elasticsearch. This initiates asynchronous background processes."
          },
          "response": []
        },
        {
          "name": "Sync Links",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/elasticsearch/sync/links",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "elasticsearch",
                "sync",
                "links"
              ]
            },
            "description": "Trigger a synchronization of only link entities to Elasticsearch. Returns a response with status and message."
          },
          "response": []
        },
        {
          "name": "Sync Categories",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/elasticsearch/sync/categories",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "elasticsearch",
                "sync",
                "categories"
              ]
            },
            "description": "Trigger a synchronization of only category entities to Elasticsearch. Returns a response with status and message."
          },
          "response": []
        },
        {
          "name": "Sync Models",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/elasticsearch/sync/models",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "elasticsearch",
                "sync",
                "models"
              ]
            },
            "description": "Trigger a synchronization of only model entities to Elasticsearch. Returns a response with status and message."
          },
          "response": []
        },
        {
          "name": "Get Sync Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/elasticsearch/sync/status",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "elasticsearch",
                "sync",
                "status"
              ]
            },
            "description": "Get the current status of all synchronization processes (links, categories, models), including progress information and completion status."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Cache",
      "item": [
        {
          "name": "Clear All Caches",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/cache/clear",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "cache",
                "clear"
              ]
            },
            "description": "Clear all Redis caches"
          },
          "response": []
        },
        {
          "name": "Clear Specific Cache",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/cache/clear/:cacheName",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "cache",
                "clear",
                ":cacheName"
              ],
              "variable": [
                {
                  "key": "cacheName",
                  "value": "categories",
                  "description": "Name of the cache to clear"
                }
              ]
            },
            "description": "Clear a specific cache by name"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Scheduler",
      "item": [
        {
          "name": "Trigger Scheduler",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/scheduler/trigger",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "scheduler",
                "trigger"
              ]
            },
            "description": "Trigger parallel processing of Google Sheets and Thumb Paths. This endpoint runs every 8 hours automatically."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Tenant-Id",
                    "value": "{{tenant_id}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/scheduler/trigger",
                  "host": ["{{base_url}}"],
                  "path": ["api", "scheduler", "trigger"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "Processing completed successfully"
            },
            {
              "name": "Already Processing",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Tenant-Id",
                    "value": "{{tenant_id}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/scheduler/trigger",
                  "host": ["{{base_url}}"],
                  "path": ["api", "scheduler", "trigger"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "Processing is already in progress"
            },
            {
              "name": "Error Response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Tenant-Id",
                    "value": "{{tenant_id}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/scheduler/trigger",
                  "host": ["{{base_url}}"],
                  "path": ["api", "scheduler", "trigger"]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "error": "Error during processing: [error message]"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Google Sheets",
      "item": [
        {
          "name": "Get Processed Sheets",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/google-sheets/processed",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "google-sheets",
                "processed"
              ]
            },
            "description": "Get all processed sheets with detailed information including sheet name, processing date, approval status, number of records processed, tenant ID, workbook ID, and processing status (0: Not started, 1: In Progress, 2: Completed, 3: Failed)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Tenant-Id",
                    "value": "{{tenant_id}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/google-sheets/processed",
                  "host": ["{{base_url}}"],
                  "path": ["api", "google-sheets", "processed"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "totalSheets": 2,
                "sheets": [
                  {
                    "id": 1,
                    "sheetName": "example_sheet",
                    "processedDate": "2024-03-21T10:30:00",
                    "isProcessingCompleted": true,
                    "recordsProcessed": 100,
                    "tenantId": 1,
                    "workbookId": "workbook123",
                    "status": 2
                  },
                  {
                    "id": 2,
                    "sheetName": "another_sheet",
                    "processedDate": "2024-03-21T11:30:00",
                    "isProcessingCompleted": false,
                    "recordsProcessed": 50,
                    "tenantId": 1,
                    "workbookId": "workbook123",
                    "status": 1
                  }
                ]
              }
            }
          ]
        },
        {
          "name": "Get Processed Sheets By Workbook",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/google-sheets/processed/:workbookId",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "google-sheets",
                "processed",
                ":workbookId"
              ],
              "variable": [
                {
                  "key": "workbookId",
                  "value": "exampleWorkbookId",
                  "description": "ID of the workbook"
                }
              ]
            },
            "description": "Get processed sheets for a specific workbook with their processing status"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Batch Processing",
      "item": [
        {
          "name": "Process Categories and Models",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/links/batch/process-categories-models?page=0&size=100",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "links",
                "batch",
                "process-categories-models"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0",
                  "description": "Page number (zero-based)"
                },
                {
                  "key": "size",
                  "value": "100",
                  "description": "Number of items per page"
                }
              ]
            },
            "description": "Process categories and models for links in a specific page. Returns a 200 OK response with processing results."
          },
          "response": []
        },
        {
          "name": "Process All Categories and Models",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/links/batch/process-all-categories-models",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "links",
                "batch",
                "process-all-categories-models"
              ]
            },
            "description": "Start background processing of all links for categories and models. Returns a 202 Accepted response immediately."
          },
          "response": []
        },
        {
          "name": "Process By Tenant ID",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/links/batch/process-by-tenant/:tenantId?page=0&size=100",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "links",
                "batch",
                "process-by-tenant",
                ":tenantId"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0",
                  "description": "Page number (zero-based)"
                },
                {
                  "key": "size",
                  "value": "100",
                  "description": "Number of items per page"
                }
              ],
              "variable": [
                {
                  "key": "tenantId",
                  "value": "1",
                  "description": "ID of the tenant"
                }
              ]
            },
            "description": "Start background processing of categories and models for links of a specific tenant. Returns a 202 Accepted response immediately."
          },
          "response": []
        },
        {
          "name": "Process By Date Range",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/links/batch/process-by-date-range?startDate=2023-01-01T00:00:00&endDate=2023-12-31T23:59:59&page=0&size=100",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "links",
                "batch",
                "process-by-date-range"
              ],
              "query": [
                {
                  "key": "startDate",
                  "value": "2023-01-01T00:00:00",
                  "description": "Start date in ISO format"
                },
                {
                  "key": "endDate",
                  "value": "2023-12-31T23:59:59",
                  "description": "End date in ISO format"
                },
                {
                  "key": "page",
                  "value": "0",
                  "description": "Page number (zero-based)"
                },
                {
                  "key": "size",
                  "value": "100",
                  "description": "Number of items per page"
                }
              ]
            },
            "description": "Start background processing of categories and models for links within a date range. Returns a 202 Accepted response immediately."
          },
          "response": []
        },
        {
          "name": "Process By Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/links/batch/process-by-category?category=exampleCategory&page=0&size=100",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "links",
                "batch",
                "process-by-category"
              ],
              "query": [
                {
                  "key": "category",
                  "value": "exampleCategory",
                  "description": "Category to process"
                },
                {
                  "key": "page",
                  "value": "0",
                  "description": "Page number (zero-based)"
                },
                {
                  "key": "size",
                  "value": "100",
                  "description": "Number of items per page"
                }
              ]
            },
            "description": "Start background processing of models for links with a specific category. Returns a 202 Accepted response immediately."
          },
          "response": []
        }
      ]
    },
    {
      "name": "LinkCategory Migration",
      "item": [
        {
          "name": "Migrate All LinkCategories",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/migration/link-category/all",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "admin",
                "migration",
                "link-category",
                "all"
              ]
            },
            "description": "Migrate all LinkCategory records to the sharded tables"
          },
          "response": []
        },
        {
          "name": "Migrate LinkCategories by Tenant",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/migration/link-category/tenant/:tenantId",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "admin",
                "migration",
                "link-category",
                "tenant",
                ":tenantId"
              ],
              "variable": [
                {
                  "key": "tenantId",
                  "value": "1",
                  "description": "ID of the tenant"
                }
              ]
            },
            "description": "Migrate LinkCategory records for a specific tenant to the sharded tables"
          },
          "response": []
        },
        {
          "name": "Migrate LinkCategories by Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/migration/link-category/category/:categoryName",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "admin",
                "migration",
                "link-category",
                "category",
                ":categoryName"
              ],
              "variable": [
                {
                  "key": "categoryName",
                  "value": "example-category",
                  "description": "Name of the category to migrate"
                }
              ]
            },
            "description": "Migrate LinkCategory records for a specific category to the appropriate shard"
          },
          "response": []
        },
        {
          "name": "Get Categories with Shard Info",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/migration/link-category/categories-shard-info",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "admin",
                "migration",
                "link-category",
                "categories-shard-info"
              ]
            },
            "description": "Get all categories with their target shard information and record counts"
          },
          "response": []
        }
      ]
    },
    {
      "name": "LinkModel Migration",
      "item": [
        {
          "name": "Migrate All LinkModels",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/migration/link-model/all",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "admin",
                "migration",
                "link-model",
                "all"
              ]
            },
            "description": "Migrate all LinkModel records to the sharded tables"
          },
          "response": []
        },
        {
          "name": "Migrate LinkModels by Tenant",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/migration/link-model/tenant/:tenantId",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "admin",
                "migration",
                "link-model",
                "tenant",
                ":tenantId"
              ],
              "variable": [
                {
                  "key": "tenantId",
                  "value": "1",
                  "description": "ID of the tenant"
                }
              ]
            },
            "description": "Migrate LinkModel records for a specific tenant to the sharded tables"
          },
          "response": []
        },
        {
          "name": "Migrate LinkModels by Model",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/migration/link-model/model/:modelName",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "admin",
                "migration",
                "link-model",
                "model",
                ":modelName"
              ],
              "variable": [
                {
                  "key": "modelName",
                  "value": "example-model",
                  "description": "Name of the model to migrate"
                }
              ]
            },
            "description": "Migrate LinkModel records for a specific model to the appropriate shard"
          },
          "response": []
        },
        {
          "name": "Get Models with Shard Info",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/migration/link-model/models-shard-info",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "admin",
                "migration",
                "link-model",
                "models-shard-info"
              ]
            },
            "description": "Get all models with their target shard information and record counts"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Thumbnail Generation",
      "item": [
        {
          "name": "Process All Thumbnails",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/thumbs/process",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "thumbs",
                "process"
              ]
            },
            "description": "Process all links with 'NA' thumbpath values in batches of 20 until completion. Downloads thumbnail images, optimizes them, saves to configured directory, and updates both database and Elasticsearch. The thumbpath directory is configurable in application properties."
          },
          "response": []
        },
        {
          "name": "Get Processing Stats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/thumbs/stats",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "thumbs",
                "stats"
              ]
            },
            "description": "Get statistics about thumbnail processing, including total links, processed and pending thumbpaths, and progress percentage. Thumbnails are stored in the configurable directory specified by 'fvp.thumbs.directory' in application properties (/Users/nitin.goyal/Desktop/myspace/personal/fvp/thumb/ for local and /apps/fvp/thumbs for production)."
          },
          "response": []
        },
        {
          "name": "Update Processed Status",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Tenant-Id",
                "value": "{{tenant_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/thumbs/update-processed-status",
              "host": ["{{base_url}}"],
              "path": ["api", "thumbs", "update-processed-status"]
            },
            "description": "Updates all links with thumbPathProcessed=2 to thumbPathProcessed=1 in both MySQL and Elasticsearch. The endpoint processes links in batches of 10 in parallel using 5 threads for better performance. It includes concurrent processing protection to prevent multiple simultaneous executions."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Tenant-Id",
                    "value": "{{tenant_id}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/thumbs/update-processed-status",
                  "host": ["{{base_url}}"],
                  "path": ["api", "thumbs", "update-processed-status"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "message": "Processing completed",
                "totalRecords": 100,
                "processed": 95,
                "failed": 5,
                "totalDuration": "30 seconds"
              }
            },
            {
              "name": "Already Processing",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Tenant-Id",
                    "value": "{{tenant_id}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/thumbs/update-processed-status",
                  "host": ["{{base_url}}"],
                  "path": ["api", "thumbs", "update-processed-status"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "message": "Processing is already running",
                "status": "in_progress"
              }
            },
            {
              "name": "No Records Found",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Tenant-Id",
                    "value": "{{tenant_id}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/thumbs/update-processed-status",
                  "host": ["{{base_url}}"],
                  "path": ["api", "thumbs", "update-processed-status"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "message": "No links found with thumbPathProcessed=2",
                "processed": 0,
                "failed": 0
              }
            }
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "tenant_id",
      "value": "1",
      "type": "string"
    }
  ]
}